## 백준 7569 토마토
# keypoint : bfs

from collections import deque
import sys
input=sys.stdin.readline

m,n,h=map(int,input().split())

arr=[]
for i in range(h):
    # 1 : 익은 토마토, 0 : 익지 않은 토마토, -1 : 토마토x
    matrix=[]
    for j in range(n):
        matrix.append(list(map(int,input().split())))
    arr.append(matrix)

visit=[[[0 for i in range(m)] for j in range(n)] for k in range(h)]

dx=[-1,1,0,0,0,0]
dy=[0,0,-1,1,0,0]
dz=[0,0,0,0,-1,1]

q=deque()

def bfs():
    while q:
        x,y,z=q.popleft()
        for i in range(6):
            nx=x+dx[i]
            ny=y+dy[i]
            nz=z+dz[i]
            if 0<=nx<h and 0<=ny<n and 0<=nz<m:
                if arr[nx][ny][nz]==0 and visit[nx][ny][nz]==0:
                    q.append((nx,ny,nz))
                    arr[nx][ny][nz]=arr[x][y][z]+1
                    visit[nx][ny][nz]=1

for i in range(h):
    for j in range(n):
        for k in range(m):
            if arr[i][j][k]==1 and visit[i][j][k]==0:
                q.append((i,j,k))
                visit[i][j][k]=1

bfs()

result=0
for i in arr:
    for j in i:
        for k in j:
            if k==0:
                print(-1)
                exit()
            result=max(result,k)

print(result-1)